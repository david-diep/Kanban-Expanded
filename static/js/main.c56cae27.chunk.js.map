{"version":3,"sources":["components/task.jsx","components/column.jsx","App.js","serviceWorker.js","index.js"],"names":["Task","props","state","editTitle","editText","title","task","text","content","onTextClick","bind","onTitleClick","onTitleSave","onTextSave","onTitleChange","onTextChange","event","this","setState","target","value","preventDefault","changeTaskTitle","id","changeTaskText","titleForm","className","onSubmit","type","onChange","textForm","rows","draggableId","index","provided","snapshot","isDragging","draggableProps","dragHandleProps","ref","innerRef","onClick","React","Component","Column","handleClick","deleteThisColumn","e","split","addCard","deleteColumn","column","aria-hidden","deleteColumnButton","droppableId","isDraggingOver","droppableProps","tasks","map","key","placeholder","App","onDragEnd","result","destination","source","newColumnOrder","columnOrder","splice","startColumn","columns","finishColumn","startTaskIds","Array","from","taskIds","newStartColumn","finishTaskIds","newFinishColumn","newState","newTaskIds","newColumn","addColumn","taskSerial","columnSerial","showDeleteColumn","newTasks","newTask","prevState","appState","JSON","stringify","localStorage","savedState","parse","newTaskSerial","newColumns","unshift","deleteOrderIndex","findIndex","col","deleteTasks","i","length","newColumnSerial","push","direction","columnId","taskId","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c56cae27.chunk.js","sourcesContent":["import React from 'react';\nimport {Draggable} from 'react-beautiful-dnd'\n\nclass Task extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      editTitle:false,\n      editText:false,\n      title: this.props.task.title,\n      text: this.props.task.content\n        }\n    this.onTextClick = this.onTextClick.bind(this);\n    this.onTitleClick = this.onTitleClick.bind(this);\n    this.onTitleSave = this.onTitleSave.bind(this);\n    this.onTextSave = this.onTextSave.bind(this);\n    this.onTitleChange = this.onTitleChange.bind(this)\n    this.onTextChange = this.onTextChange.bind(this)\n  }\n\n  onTitleClick(event){\n    this.setState({editTitle:true})\n  }\n\n  onTitleChange(event){\n    this.setState({title:event.target.value})\n  }\n\n  onTitleSave(event) {\n    event.preventDefault();\n    this.props.changeTaskTitle(this.props.task.id, this.state.title)\n    this.setState({editTitle:false})\n\n  }\n\n  onTextChange(event) {\n    this.setState({ text: event.target.value })\n  }\n\n  onTextClick(event){\n    this.setState({editText:true})\n  }\n\n  onTextSave(event){\n    event.preventDefault();\n    this.props.changeTaskText(this.props.task.id, this.state.text)\n    this.setState({ editText: false })\n\n  }\n\n  render() {\n    const titleForm = (\n      <form className=\"input-group\" onSubmit={this.onTitleSave}>\n        <input type=\"text\" className=\"form-control\" value={this.state.title} onChange={this.onTitleChange} ></input>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-primary\">Save</button>\n          </div>\n      </form>);\n\n    const textForm = (\n      <form onSubmit={this.onTextSave}>\n        <textarea className=\"form-control\" rows=\"3\" value={this.state.text} onChange={this.onTextChange}></textarea>\n        <div className=\"d-flex flex-row-reverse\"><button className=\"btn btn-primary\">Save</button></div>\n      </form>\n    );\n\n    return (\n      <Draggable draggableId={this.props.task.id} index={this.props.index}>\n        {(provided, snapshot) => (\n          <div\n            className={`\n              border\n              p-2\n              m-2\n              bg-light\n              ${snapshot.isDragging ? 'highlighted-task':''}`\n            }\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref = {provided.innerRef}\n          >\n            <div className=\"border-bottom\" onClick={this.onTitleClick}>\n              {this.state.editTitle ? titleForm : this.state.title}\n            </div>\n            <div onClick={this.onTextClick}>\n            {this.state.editText ? textForm : <p className=\"p-1\" >{this.state.text}</p>}\n            </div>\n          </div>\n        )}\n      </Draggable>\n    )}\n\n}\n\nexport default Task;\n","import React from 'react';\nimport Task from './task';\nimport {Droppable, Draggable} from 'react-beautiful-dnd'\n\nclass Column extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n    this.deleteThisColumn=this.deleteThisColumn.bind(this)\n  }\n\n  handleClick(e){\n    const id = e.target.id\n    const splitId = id.split('-')\n    if(splitId[0] === \"column\"){\n      this.props.addCard(id)\n    }\n  }\n\n  deleteThisColumn(){\n    this.props.deleteColumn(this.props.column.id)\n  }\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\n        {(provided, snapshot) => (\n          <div\n            className={`\n              col-min\n              overflow-y\n              h-80\n              w-25\n              border\n              border-secondary\n              m-1\n              bg-white\n              ${snapshot.isDragging ? 'highlighted-task' : ''}\n            `}\n            ref = {provided.innerRef}\n            {...provided.draggableProps}\n            >\n          <div className=\"w-100 border-bottom d-flex justify-content-between\"\n            {...provided.dragHandleProps}>\n            <h3 className=\"pt-2 pl-2\">{this.props.column.title}</h3>\n            <div className={`m-2`}>\n              <button\n                id={this.props.column.id}\n                className={`btn btn-primary`}\n                onClick={this.handleClick}\n              >\n              <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n               </button>\n                {this.props.deleteColumnButton &&\n                <button\n                className=\"btn btn-outline-danger ml-2\"\n                onClick={this.deleteThisColumn}>\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                </button>}\n            </div>\n          </div>\n          <Droppable droppableId={this.props.column.id}>\n            {(provided, snapshot)=>(\n              <div\n                className={`\n                  tasklist\n                  h-80\n                  p-1\n                  ${snapshot.isDraggingOver ? 'bg-info':''}\n                `}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                >\n                {this.props.tasks.map((task, index) => (\n                <Task\n                key={task.id}\n                task={task}\n                index={index}\n                changeTaskText={this.props.changeTaskText}\n                changeTaskTitle={this.props.changeTaskTitle}\n                 />\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>)}\n      </Draggable>\n    );\n  }\n}\n\nexport default Column;\n","import React from 'react';\nimport Column from './components/column'\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.addCard = this.addCard.bind(this)\n    this.addColumn = this.addColumn.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.state={\n      taskSerial: 5,\n      tasks:{\n        'task-1': { id: 'task-1', title:\"1\", content:\"Take out the garbage.\"},\n        'task-2': { id: 'task-2', title: \"2\", content: \"Charge my phone.\" },\n        'task-3': { id: 'task-3', title: \"3\", content: \"Complete the hackathon.\" },\n        'task-4': { id: 'task-4', title: \"4\", content: \"Get a job.\" }\n      },\n      columnSerial: 4,\n      columns:{\n        'column-1':{\n          id: 'column-1',\n          title:\"To Do\",\n          taskIds: ['task-1','task-2','task-3','task-4']\n        },\n        'column-2': {\n          id: 'column-2',\n          title: \"In Progress\",\n          taskIds: []\n        },\n        'column-3': {\n          id: 'column-3',\n          title: \"Done\",\n          taskIds: []\n        }\n      },\n      columnOrder: ['column-1', 'column-2', 'column-3'],\n      deleteColumnButton: false\n    }\n    this.changeTaskTitle=this.changeTaskTitle.bind(this);\n    this.changeTaskText=this.changeTaskText.bind(this);\n    this.showDeleteColumn=this.showDeleteColumn.bind(this)\n    this.deleteColumn=this.deleteColumn.bind(this)\n  }\n\n  changeTaskTitle(id,title){\n    const newTasks = {...this.state.tasks}\n    const newTask = { id: id, title: title, content: newTasks[id].content}\n    newTasks[id]=newTask;\n    this.setState({tasks:newTasks})\n  }\n\n  changeTaskText(id,content){\n    const newTasks = {...this.state.tasks}\n    const newTask = { id: id, title: newTasks[id].title, content: content }\n    newTasks[id] = newTask;\n    this.setState({ tasks: newTasks })\n  }\n\n  componentDidUpdate(prevState){\n    if(this.state !== prevState){\n      const appState = JSON.stringify(this.state)\n      localStorage.savedState= appState\n    }\n  }\n\n  componentDidMount(){\n    let savedState = localStorage.savedState\n    if(!savedState){\n      const state = JSON.stringify(this.state)\n      localStorage.savedState = state\n      return\n    } else {\n      savedState = JSON.parse(savedState)\n      this.setState({\n        taskSerial: savedState.taskSerial,\n        tasks: savedState.tasks,\n        columnSerial: savedState.columnSerial,\n        columns: savedState.columns,\n        columnOrder: savedState.columnOrder\n      })\n    }\n  }\n\n  onDragEnd = result => {\n    const {destination, source, draggableId, type} = result;\n\n    if(!destination){\n      return;\n    }\n\n    if(destination.droppableId === source.droppableId &&\n      destination.index === source.index\n      ) {\n        return;\n      }\n\n    if(type === 'column'){\n      const newColumnOrder = [...this.state.columnOrder]//Array.from(this.state.columnOrder)\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId)\n\n      this.setState({columnOrder: newColumnOrder})\n      return;\n    }\n\n    const startColumn = this.state.columns[source.droppableId];\n    const finishColumn = this.state.columns[destination.droppableId];\n    if(startColumn === finishColumn){ //if change is inside the same column\n      const newTaskIds = Array.from(startColumn.taskIds);\n      newTaskIds.splice(source.index,1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...startColumn,\n        taskIds: newTaskIds,\n      };\n\n      this.setState({\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn\n        }\n      });\n      return;\n    }\n\n  const startTaskIds = Array.from(startColumn.taskIds);\n  startTaskIds.splice(source.index,1);\n  const newStartColumn = {\n    ...startColumn,\n    taskIds:startTaskIds\n  };\n\n  const finishTaskIds = Array.from(finishColumn.taskIds);\n  finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinishColumn = {\n    ...finishColumn,\n    taskIds: finishTaskIds\n  };\n\n  const newState={\n  columns:{\n    ...this.state.columns,\n    [newStartColumn.id]: newStartColumn,\n    [newFinishColumn.id]: newFinishColumn\n  }\n}\n  this.setState(newState);\n}\n\n  addCard(column){\n    let taskSerial = this.state.taskSerial\n    const newTaskSerial = taskSerial + 1\n    const newTasks = JSON.parse(JSON.stringify(this.state.tasks))\n    newTasks.[`task-${taskSerial}`] = {\n      id: `task-${taskSerial}`,\n      title: `${taskSerial}`,\n      content: \"New Card\"\n    }\n    const newColumns = JSON.parse(JSON.stringify(this.state.columns))\n    newColumns[column].taskIds.unshift(`task-${taskSerial}`)\n    this.setState({\n      taskSerial: newTaskSerial,\n      tasks: newTasks,\n      columns: newColumns\n    })\n  }\n\n  handleClick(e){\n    if(e.target.id === \"add-column\"){\n      this.addColumn()\n    }\n  }\n\n  deleteColumn(id){\n    const newColumns={...this.state.columns}\n    const newTasks={...this.state.tasks}\n    const newColumnOrder=[...this.state.columnOrder]\n    const deleteOrderIndex= newColumnOrder.findIndex((col)=>col===id)\n    newColumnOrder.splice(deleteOrderIndex,1)\n    const deleteTasks=newColumns[id].taskIds;\n    for(let i=0; i<deleteTasks.length; i++){\n      delete newTasks[deleteTasks[i]]\n    }\n    delete newColumns[id];\n    this.setState({columns:newColumns,tasks:newTasks,columnOrder:newColumnOrder})\n  }\n\n  showDeleteColumn(){\n    this.setState(prevState=>{return {deleteColumnButton:!prevState.deleteColumnButton}})\n  }\n\n  addColumn(){\n    const columnSerial = this.state.columnSerial\n    const newColumnSerial = columnSerial + 1\n    const newColumns = JSON.parse(JSON.stringify(this.state.columns))\n    const newColumnOrder = this.state.columnOrder.splice(0)\n    newColumns[`column-${columnSerial}`] = {\n      id: `column-${columnSerial}`,\n      title: 'New Column',\n      taskIds: []\n    }\n    newColumnOrder.push(`column-${columnSerial}`)\n    this.setState({\n      columns: newColumns,\n      columnSerial: newColumnSerial,\n      columnOrder: newColumnOrder\n    })\n  }\n\n  render(){\n\n    return (\n\n        <div className=\"app overflow-x\">\n          <header>\n            <nav className={`\n              navbar\n              navbar-light\n              bg-dark\n              d-flex\n              navbar-horizontal-fixed\n              justify-content-between\n              align-items-center\n            `}\n            id=\"navbar\"\n            >\n              <h2 className=\"text-white navbar-brand\">Kanban</h2>\n              <div>\n                <h5 className=\"text-white navbar-brand\">Add New Column</h5>\n                <button\n                  onClick={this.handleClick}\n                  className=\"btn btn-primary\"\n                  id=\"add-column\"\n                >\n                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                </button>\n              <button className=\"btn btn-danger ml-3\" onClick={this.showDeleteColumn}><h5>Toggle Column Delete</h5></button>\n              </div>\n            </nav>\n            {/* this is hacky and should be replaced with a better solution */}\n            <div className=\"navbar-space\"></div>\n          </header>\n          <div className=\"p-3 app\">\n            <DragDropContext\n              onDragEnd={this.onDragEnd}\n            >\n              <Droppable\n                droppableId=\"all-columns\"\n                direction =\"horizontal\"\n                type=\"column\"\n              >\n                {provided => (\n                  <div\n                    className=\"row flex-nowrap\"\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                  >\n                    {this.state.columnOrder.map((columnId, index) =>{\n                      const column= this.state.columns[columnId];\n                      const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n\n                      return <Column\n                        addCard={this.addCard}\n                        key = {column.id}\n                        column = {column}\n                        tasks = {tasks}\n                        index = {index}\n                        changeTaskText = {this.changeTaskText}\n                        changeTaskTitle = {this.changeTaskTitle}\n                        deleteColumn={this.deleteColumn}\n                        deleteColumnButton={this.state.deleteColumnButton}\n                        />\n                    })}\n                  </div>)}\n            </Droppable>\n          </DragDropContext>\n          </div>\n        </div>\n\n\n    );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}